     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  
     8                                  extern exit, printf, scanf               ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  import scanf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 <res 00000004>              a resd 1
    18 00000004 <res 00000002>              b resw 1
    19 00000006 257520257500                format db '%u %u',0
    20 0000000C 2575206D6F64202575-         format2 db '%u mod %u = %u',0
    20 00000015 203D20257500       
    21                                      
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 68[04000000]                push dword b
    27 00000005 68[00000000]                push dword a
    28 0000000A 68[06000000]                push dword format
    29 0000000F FF15[00000000]              call [scanf]
    30 00000015 83C40C                      add esp,4*3
    31                                      
    32 00000018 A1[00000000]                mov eax,[a]
    33 0000001D C1E810                      shr eax,16
    34 00000020 6689C2                      mov dx,ax
    35 00000023 A1[00000000]                mov eax,[a]
    36 00000028 66F735[04000000]            div word [b]
    37                                      
    38 0000002F BB00000000                  mov ebx,0
    39 00000034 6689D3                      mov bx,dx
    40 00000037 B900000000                  mov ecx,0
    41 0000003C 668B0D[04000000]            mov cx,[b]
    42                                      
    43 00000043 53                          push ebx
    44 00000044 51                          push ecx
    45 00000045 FF35[00000000]              push dword [a]
    46 0000004B 68[0C000000]                push dword format2
    47 00000050 FF15[00000000]              call [printf]
    48 00000056 83C410                      add esp,4*4
    49                                      
    50                                      
    51                                          ; exit(0)
    52 00000059 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    53 0000005B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
