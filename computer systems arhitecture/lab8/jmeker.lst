     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  segment data use32 class=data
     9 00000000 0102030405060708            input db 1,2,3,4,5,6,7,8
    10                                      input_length equ $-input
    11                                  
    12 00000008 020406                      src db 2,4,6
    13                                      src_length equ $-src
    14 0000000B 00                          src_index db 0
    15                                  
    16 0000000C 0C0E10                      dst db 12,14,16
    17 0000000F 00<rept>                    output times input_length db 0
    18                                  
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 BB00000000                      mov ebx,0
    22 00000005 B908000000                      mov ecx,input_length
    23                                          start_input_loop:
    24                                          
    25 0000000A 8A83[00000000]                      mov al, [input + ebx]
    26 00000010 BA00000000                          mov edx,0
    27                                              
    28                                              start_src_bucla:
    29                                              
    30 00000015 3A82[08000000]                          cmp al,[src+edx]
    31 0000001B 7408                                    je end_src_bucla
    32 0000001D 83FA03                                  cmp edx,src_length
    33 00000020 740F                                    je papa
    34 00000022 42                                      inc edx
    35 00000023 EBF0                                    jmp start_src_bucla
    36                                              
    37                                              
    38                                              end_src_bucla:
    39 00000025 8A82[0C000000]                      mov al,[dst+edx]
    40 0000002B 8883[00000000]                      mov [input + ebx],al
    41                                              
    42                                              papa:
    43                                              
    44 00000031 43                                  inc ebx
    45 00000032 E2D6                                loop start_input_loop
    46                                          end_input_loop:
    47                                      
    48 00000034 6A00                            push dword 0
    49 00000036 FF15[00000000]                  call [exit]
