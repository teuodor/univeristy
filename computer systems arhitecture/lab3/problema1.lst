     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 03                          a db 3
    15 00000001 C800                        b dw 200
    16 00000003 EA030000                    c dd 1002
    17 00000007 2E01000000000000            d dq 302
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22                                          ;c+(a-b)-(d+d+d)-fara semn
    23 00000000 A1[03000000]                mov eax,[c]
    24 00000005 BB00000000                  mov ebx,0
    25 0000000A 8A1D[00000000]              mov bl,[a]
    26 00000010 01D8                        add eax,ebx
    27 00000012 BB00000000                  mov ebx,0
    28 00000017 668B1D[01000000]            mov bx,[b]
    29 0000001E 29D8                        sub eax,ebx
    30 00000020 8B1D[07000000]              mov ebx,dword[d]
    31 00000026 8B0D[0B000000]              mov ecx,dword[d+4]
    32 0000002C BA00000000                  mov edx,0
    33 00000031 01D8                        add eax,ebx
    34 00000033 11CA                        adc edx,ecx  
    35                                      
    36                                      
    37                                      
    38                                          ; exit(0)
    39 00000035 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 00000037 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
