     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0103FEFB03F80500            s db 1,3,-2,-5,3,-8,5,0
    15                                      ls equ $-s
    16 00000008 <res 00000008>              d1 resb ls
    17 00000010 <res 00000008>              d2 resb ls
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 B908000000                  mov ecx,ls
    23 00000005 BE[00000000]                mov esi,s
    24 0000000A BA00000000                  mov edx,0
    25 0000000F BB00000000                  mov ebx,0
    26                                      bucla:
    27                                          ;lodsb
    28 00000014 8A06                            mov al,[esi]
    29 00000016 46                              inc esi
    30 00000017 3C00                            cmp al,0
    31 00000019 7D02                            jge set_poz
    32 0000001B 7C09                            jl set_neg
    33                                          set_poz:
    34 0000001D 8882[08000000]                      mov [d1+edx],al
    35 00000023 42                                  inc edx
    36 00000024 EB07                                jmp final
    37                                          set_neg:
    38 00000026 8883[10000000]                      mov [d2+ebx],al
    39 0000002C 43                                  inc ebx
    40                                          final:   
    41 0000002D E2E5                        loop bucla
    42                                              
    43                                              
    44                                          
    45                                          ; exit(0)
    46 0000002F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    47 00000031 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
