     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 07563412153C2B1A12-         s dd 12345607h,1A2B3C15h,13A33412h
    14 00000009 34A313             
    15                                      ls equ ($-s)/4
    16 0000000C <res 00000003>              d resb ls
    17 0000000F 07                          e db 7
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 B903000000                  mov ecx,ls
    24 00000005 BE[00000000]                mov esi,s
    25 0000000A BA00000000                  mov edx,0
    26                                      bucla:
    27 0000000F 66B80000                        mov ax,0
    28 00000013 AC                              lodsb
    29 00000014 88C3                            mov bl,al
    30 00000016 F635[0F000000]                  div byte[e]
    31 0000001C 80FC00                          cmp ah,0
    32 0000001F 7506                            jne final
    33 00000021 889A[0C000000]                  mov [d+edx],bl
    34                                          final:
    35 00000027 E2E6                            loop bucla
    36                                          
    37                                          
    38                                          
    39                                          
    40                                          
    41                                          
    42                                          ; exit(0)
    43 00000029 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 0000002B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
