'''
Created on 3 Feb 2019

@author: Teuodor
'''
def consistent(l):
    if not l[0] == 0 and l[len(l)-1] == 0:
        return False
    i=2
    while i<len(l) and (l[i]-l[i-1] == 1 or l[i]-l[i-1] == -1):
        i=i+1
    if i == len(l)-1:
        return True
    return False
def solution(l,n):
    if len(l) == 2*n+1:
        return True
    return False
def bcktRec(l,n):
    x=[]
    l = l + [-1]
    for i in range(-1,2):
        l = l + [i]
        if consistent(l):
            bcktRec(l[:], n)
            l = l[:-1]
            if solution(l, n):
                x.append(l)
        return x
        

print(bcktRec([], 1))
      
        