'''
Created on 19 Feb 2019

@author: Teuodor
'''
def consecutiv(a,b):
    if abs(ord(a) - ord(b)) == 1:
        return True
    return False
def consistent(l, nr):
    if len(nr) == 0:
        return True
    i = 0
    while i<len(nr)-1 and consecutiv(l[nr[i]],l[nr[i+1]]): 
        i += 1
        
    if i == len(nr)-1:
        return True
    return False
def solution(l, nr):
    if l[nr[0]] == 'a' and l[nr[-1]] == 'a':
        return True
    return False
def solutionFound(l,nr):
    x = []
    for i in nr:
        x.append(l[i])
    return x
def bckt(l, n, nr = []):
    if len(nr) == n:
        if solution(l, nr):
            return [solutionFound(l, nr)]
        else:
            return []
    else:
        sol = []
        for i in range(0,len(l)):
            nr.append(i)
            if consistent(l, nr):
                sol.append(bckt(l, n, nr[:]))
                
            nr = nr[:-1]
            
    return sol
l =[chr(i) for i in range(ord('a'),ord('z')+1)]

print(bckt(l, 5))